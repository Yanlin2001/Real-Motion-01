# general settings
name: X0321_realesrnet_motion03_under_h
model_type: RealESRNetModel
scale: 1
num_gpu: auto  # auto: can infer from your visible devices automatically. official: 4 GPUs
manual_seed: 0

gt_usm: True  # USM the ground-truth

# Motion process
Gp: 'v'
step: [4, 8]

rician_noise_prob: 0.0
rician_noise_range: [0.0001, 0.0002]

rot90_prob: 1.0 # 旋转90度概率
horizontal_mask_prob: 1.0
undersample_prob: 1.0 # 降采样概率
center_fraction_range: [0.05, 0.15] # 中心部分采样范围
acceleration_range: [4, 4] # 加速范围
#rounds_range: [51,251] # 运动阶段数
rotate_prob: 0.0 # 旋转概率
rotate_range: [-2, 2] # 旋转角度范围
translation_prob: [0.0, 0.0, 1.0] # un-down, left-right, keep
translation_range: [-0.001, 0.001]  # 平移范围
perspective_prob: [0.0, 0.0, 1.0]  # un-down, left-right, keep
perspective_range: [-0.001, 0.001] # 透视范围
stretch_prob: 0.0 # 伸缩概率
stretch_range: [-0.001, 0.001] # 伸缩范围

# the first degradation process
resize_prob: [0.1, 0.1, 0.8]  # up, down, keep
resize_range: [0.9, 1.1]
gaussian_noise_prob: 0.5
noise_range: [1, 30]
poisson_scale_range: [0.05, 3]
gray_noise_prob: 0.4
jpeg_range: [60, 95]

# the second degradation process
second_blur_prob: 0.8
resize_prob2: [0.1, 0.1, 0.8]  # up, down, keep
resize_range2: [0.9, 1.1]
gaussian_noise_prob2: 0.5
noise_range2: [1, 25]
poisson_scale_range2: [0.05, 2.5]
gray_noise_prob2: 0.4
jpeg_range2: [70, 95]

gt_size: 200
queue_size: 192

# dataset and data loader settings
datasets:
  train:
    name: MRI_Brain01
    type: RealESRGANDataset
    dataroot_gt: datasets/motion01
    #dataroot_lq: datasets/motion01
    meta_info: datasets/motion01/meta_info/meta_info_test.txt
    io_backend:
      type: disk

    blur_kernel_size: 21
    kernel_list: ['iso', 'aniso', 'generalized_iso', 'generalized_aniso', 'plateau_iso', 'plateau_aniso']
    kernel_prob: [0.45, 0.25, 0.12, 0.03, 0.12, 0.03]
    sinc_prob: 0.1
    blur_sigma: [0.2, 3]
    betag_range: [0.5, 4]
    betap_range: [1, 2]

    blur_kernel_size2: 21
    kernel_list2: ['iso', 'aniso', 'generalized_iso', 'generalized_aniso', 'plateau_iso', 'plateau_aniso']
    kernel_prob2: [0.45, 0.25, 0.12, 0.03, 0.12, 0.03]
    sinc_prob2: 0.1
    blur_sigma2: [0.2, 1.5]
    betag_range2: [0.5, 4]
    betap_range2: [1, 2]

    final_sinc_prob: 0.8

    gt_size: 200
    use_hflip: False # Horizontal Flip(Left-Right Flip)，即水平翻转
    use_rot: False

    # data loader
    use_shuffle: true
    num_worker_per_gpu: 5
    batch_size_per_gpu: 8
    dataset_enlarge_ratio: 1
    prefetch_mode: ~

  # Uncomment these for validation
  val:
    name: gt320_h
    type: PairedImageDataset
    dataroot_gt: datasets/motion02/gt320_h
    dataroot_lq: datasets/motion02/gt320_motion_hf4
    io_backend:
      type: disk

  val_2:
    name: gt320_v
    type: PairedImageDataset
    dataroot_gt: datasets/motion02/gt320_v
    dataroot_lq: datasets/motion02/gt320_motion_vf4
    io_backend:
      type: disk

  val_3:
    name: run_v
    type: PairedImageDataset
    dataroot_gt: datasets/motion02/run01_h
    dataroot_lq: datasets/motion02/run02_hf4
    io_backend:
      type: disk

  val_4:
    name: run_h
    type: PairedImageDataset
    dataroot_gt: datasets/motion02/run01_v
    dataroot_lq: datasets/motion02/run02_vf4
    io_backend:
      type: disk

# network structures
network_g:
  type: RRDBNet
  num_in_ch: 1
  num_out_ch: 1
  num_feat: 64
  num_block: 23
  num_grow_ch: 32
  scale: 1

# path
path:
  #pretrain_network_g: experiments/pretrained_models/ESRGAN_SRx4_DF2KOST_official-ff704c30.pth / /kaggle/input/net-g-40000-b2024/net_g_40000_b2024.pth
  pretrain_network_g: ~
  param_key_g: params_ema
  strict_load_g: true
  resume_state: ~

# training settings
train:
  ema_decay: 0.999
  optim_g:
    type: Adam
    lr: !!float 2e-4
    weight_decay: 0
    betas: [0.9, 0.99]

  scheduler:
    type: MultiStepLR
    milestones: [30000]
    gamma: 0.5

  total_iter: 30000
  warmup_iter: -1  # no warm up

  # losses
  pixel_opt:
    type: L1Loss
    loss_weight: 1.0
    reduction: mean

# Uncomment these for validation
# validation settings
val:
  val_freq: !!float 1e4
  save_img: True

  metrics:
    psnr: # metric name
      type: calculate_psnr
      crop_border: 4
      test_y_channel: false
    ssim:
      type: calculate_ssim
      crop_border: 4
      test_y_channel: false

# logging settings
logger:
  print_freq: 100
  save_checkpoint_freq: !!float 5e3
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500